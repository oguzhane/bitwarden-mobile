<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Name" xml:space="preserve">
    <value>Bitwarden - Pengelola Sandi</value>
    <comment>Max 30 characters</comment>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Bitwarden, Inc. adalah perusahaan induk dari 8bit Solutions LLC.

DINOBATKAN SEBAGAI PENGELOLA KATA SANDI TERBAIK OLEH THE VERGE, U.S. NEWS &amp; WORLD REPORT, CNET, DAN BANYAK LAGI.

Kelola, simpan, amankan, dan bagikan kata sandi tanpa batas di perangkat tanpa batas dari mana saja. Bitwarden memberikan solusi manajemen kata sandi sumber terbuka untuk semua orang, baik di rumah, di tempat kerja, atau di perjalanan.

Buat kata sandi yang kuat, unik, dan acak berdasarkan persyaratan keamanan untuk setiap situs web yang sering Anda kunjungi.

Bitwarden Send dengan cepat mengirimkan informasi terenkripsi - file dan teks biasa - langsung ke siapa saja.

Bitwarden menawarkan paket Teams dan Enterprise untuk perusahaan sehingga Anda dapat berbagi kata sandi dengan rekan kerja dengan aman.

Mengapa Memilih Bitwarden:

Enkripsi Kelas Dunia
Kata sandi dilindungi dengan enkripsi end-to-end yang canggih (AES-256 bit, salted hash, dan PBKDF2 SHA-256) sehingga data Anda tetap aman dan pribadi.

Pembuat Kata Sandi Internal
Hasilkan kata sandi yang kuat, unik, dan acak berdasarkan persyaratan keamanan untuk setiap situs web yang sering Anda kunjungi.

Terjemahan Global
Terjemahan Bitwarden tersedia dalam 40 bahasa dan terus bertambah, berkat komunitas global kami.

Aplikasi Lintas Platform
Amankan dan bagikan data sensitif di dalam Bitwarden Vault Anda dari browser, perangkat seluler, atau OS desktop apa pun, dan banyak lagi.
</value>
  <comment>Max 4000 characters</comment>
  </data>
  <data name="Keywords" xml:space="preserve">
    <value>bitwarden,bit warden,8bit,password,free password manager,password manager,login manager,gratis</value>
    <comment>Max 100 characters</comment>
  </data>
  <data name="Screenshot1" xml:space="preserve">
    <value>Kelola semua info masuk dan sandi Anda dari brankas yang aman</value>
  </data>
  <data name="Screenshot2" xml:space="preserve">
    <value>Secara otomatis menghasilkan sandi yang kuat, acak dan aman</value>
  </data>
  <data name="Screenshot3" xml:space="preserve">
    <value>Melindungi brankas Anda dengan Touch ID, kode PIN, atau sandi utama</value>
  </data>
  <data name="Screenshot4" xml:space="preserve">
    <value>Masuk otomatis dari Safari, Chrome, dan ratusan aplikasi lainnya</value>
  </data>
  <data name="Screenshot5" xml:space="preserve">
    <value>Sinkronkan dan akses brankas Anda dari beberapa perangkat</value>
  </data>
</root>
